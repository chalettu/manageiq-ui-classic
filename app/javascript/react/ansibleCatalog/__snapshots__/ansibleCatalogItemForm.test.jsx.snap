// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Ansible catalog item form component should build an extra vars object 1`] = `
Object {
  "test": Object {
    "default": "test",
  },
  "test2": Object {
    "default": "test2",
  },
}
`;

exports[`Ansible catalog item form component should format extra vars 1`] = `
Array [
  Object {
    "default": 1,
    "key": "testvalue1",
  },
  Object {
    "default": 2,
    "key": "testValue2",
  },
]
`;

exports[`Ansible catalog item form component should populate form default values 1`] = `
Object {
  "description": "",
  "dialogOption": "existing",
  "dialog_id": "",
  "display": false,
  "long_description": "",
  "name": "",
  "provisioning_become_enabled": false,
  "provisioning_cloud_credential_id": "",
  "provisioning_cloud_type": "",
  "provisioning_credential_id": "",
  "provisioning_execution_ttl": "",
  "provisioning_extra_vars": Array [],
  "provisioning_hosts": "localhost",
  "provisioning_log_output": "on_error",
  "provisioning_playbook_id": "",
  "provisioning_repository_id": "",
  "provisioning_vault_credential_id": "",
  "provisioning_verbosity": 0,
  "remove_resources": "no_without_playbook",
  "retirement_become_enabled": false,
  "retirement_cloud_credential_id": "",
  "retirement_cloud_type": "",
  "retirement_credential_id": "",
  "retirement_execution_ttl": "",
  "retirement_extra_vars": Array [],
  "retirement_hosts": "localhost",
  "retirement_log_output": "on_error",
  "retirement_playbook_id": "",
  "retirement_repository_id": "",
  "retirement_vault_credential_id": "",
  "retirement_verbosity": 0,
  "service_template_catalog_id": "",
}
`;

exports[`Ansible catalog item form component should render correctly 1`] = `
<Connect(AnsibleCatalogItemForm)
  duplicateDropdowns={[MockFunction]}
  loadCatalogItem={[MockFunction]}
  loadCatalogs={[MockFunction]}
  loadCloudCredential={[MockFunction]}
  loadCloudTypes={[MockFunction]}
  loadCredentials={[MockFunction]}
  loadDialogs={[MockFunction]}
  loadPlaybooks={[MockFunction]}
  loadRepos={[MockFunction]}
  region={10}
>
  <AnsibleCatalogItemForm
    ansibleCatalog={
      Object {
        "catalogItem": Object {
          "config_info": Object {
            "provision": Object {
              "cloud_credential_id": 123,
            },
            "retirement": Object {},
          },
          "description": "test",
          "id": 1234,
          "name": "test",
        },
        "cloudCredential": Object {
          "type": "test",
        },
        "dropdowns": Object {
          "catalogs": Array [
            Object {
              "label": "Amazon Operations",
              "value": "10000000000008",
            },
            Object {
              "label": "Ansible Demos",
              "value": "10000000000001",
            },
          ],
          "cloudTypes": Array [
            Object {
              "label": "Amazon",
              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::AmazonCredential",
            },
            Object {
              "label": "Azure",
              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::AzureCredential",
            },
            Object {
              "label": "Google Compute Engine",
              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::GoogleCredential",
            },
            Object {
              "label": "OpenStack",
              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::OpenstackCredential",
            },
            Object {
              "label": "Red Hat Virtualization",
              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::RhvCredential",
            },
            Object {
              "label": "VMware",
              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::VmwareCredential",
            },
          ],
          "dialogs": Array [
            Object {
              "label": "101-vm-simple-rhel Dialog",
              "value": "10000000000003",
            },
          ],
          "machineCredentials": Array [
            Object {
              "label": "Default Credential",
              "value": "10000000000064",
            },
          ],
          "repos": Array [
            Object {
              "label": "Sample Playbooks (jeromemarc)",
              "value": "10000000000014",
            },
            Object {
              "label": "workflow-demo (jeromemarc)",
              "value": "10000000000013",
            },
          ],
        },
      }
    }
    catalogItemFormId={null}
    credentialsRequest={[Function]}
    duplicateDropdowns={[Function]}
    loadCatalogItem={[Function]}
    loadCatalogs={[Function]}
    loadCloudCredential={[Function]}
    loadCloudCredentials={[Function]}
    loadCloudTypes={[Function]}
    loadCredentials={[Function]}
    loadDialogs={[Function]}
    loadPlaybooks={[Function]}
    loadRepos={[Function]}
    region={10}
  >
    <ReactFinalForm
      initialValues={
        Object {
          "description": "",
          "dialogOption": "existing",
          "dialog_id": "",
          "display": false,
          "long_description": "",
          "name": "",
          "provisioning_become_enabled": false,
          "provisioning_cloud_credential_id": "",
          "provisioning_cloud_type": "",
          "provisioning_credential_id": "",
          "provisioning_execution_ttl": "",
          "provisioning_extra_vars": Array [],
          "provisioning_hosts": "localhost",
          "provisioning_log_output": "on_error",
          "provisioning_playbook_id": "",
          "provisioning_repository_id": "",
          "provisioning_vault_credential_id": "",
          "provisioning_verbosity": 0,
          "remove_resources": "no_without_playbook",
          "retirement_become_enabled": false,
          "retirement_cloud_credential_id": "",
          "retirement_cloud_type": "",
          "retirement_credential_id": "",
          "retirement_execution_ttl": "",
          "retirement_extra_vars": Array [],
          "retirement_hosts": "localhost",
          "retirement_log_output": "on_error",
          "retirement_playbook_id": "",
          "retirement_repository_id": "",
          "retirement_vault_credential_id": "",
          "retirement_verbosity": 0,
          "service_template_catalog_id": "",
        }
      }
      mutators={
        Object {
          "copyValues": [Function],
          "insert": [Function],
          "move": [Function],
          "pop": [Function],
          "push": [Function],
          "remove": [Function],
          "shift": [Function],
          "swap": [Function],
          "unshift": [Function],
          "update": [Function],
        }
      }
      onSubmit={[Function]}
      render={[Function]}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={true}
        inline={false}
        onSubmit={[Function]}
      >
        <form
          className="form-horizontal"
          onSubmit={[Function]}
        >
          <div
            id="flash_msg_div"
          />
          <Field
            component={[Function]}
            format={[Function]}
            inputColumnSize={8}
            key="name"
            label="Name"
            labelColumnSize={3}
            name="name"
            parse={[Function]}
            validate={[Function]}
            validateOnMount={true}
          >
            <FinalFormField
              input={
                Object {
                  "name": "name",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "",
                }
              }
              inputColumnSize={8}
              label="Name"
              labelColumnSize={3}
              meta={
                Object {
                  "active": false,
                  "data": Object {},
                  "dirty": false,
                  "dirtySinceLastSubmit": false,
                  "error": "Required",
                  "initial": "",
                  "invalid": true,
                  "pristine": true,
                  "submitError": undefined,
                  "submitFailed": false,
                  "submitSucceeded": false,
                  "touched": false,
                  "valid": false,
                  "visited": false,
                }
              }
              validateOnMount={true}
            >
              <FinalFormComponent
                clearable={false}
                componentType="textfield"
                disabled={false}
                input={
                  Object {
                    "name": "name",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  }
                }
                inputColumnSize={8}
                label="Name"
                labelColumnSize={3}
                labelKey="label"
                meta={
                  Object {
                    "active": false,
                    "data": Object {},
                    "dirty": false,
                    "dirtySinceLastSubmit": false,
                    "error": "Required",
                    "initial": "",
                    "invalid": true,
                    "pristine": true,
                    "submitError": undefined,
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "touched": false,
                    "valid": false,
                    "visited": false,
                  }
                }
                multi={false}
                placeholder=""
                searchable={false}
                validateOnMount={true}
                valueKey="value"
              >
                <FormGroup
                  bsClass="form-group"
                  validationState="error"
                >
                  <div
                    className="form-group has-error"
                  >
                    <Col
                      bsClass="col"
                      className="control-label"
                      componentClass="label"
                      xs={3}
                    >
                      <label
                        className="control-label col-xs-3"
                      >
                        Name
                      </label>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={8}
                    >
                      <div
                        className="col-xs-8"
                      >
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          disabled={false}
                          id="name"
                          name="name"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder=""
                          type="text"
                          value=""
                        >
                          <input
                            className="form-control"
                            disabled={false}
                            id="name"
                            name="name"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            placeholder=""
                            type="text"
                            value=""
                          />
                        </FormControl>
                        <HelpBlock
                          bsClass="help-block"
                        >
                          <span
                            className="help-block"
                          >
                            Required
                          </span>
                        </HelpBlock>
                      </div>
                    </Col>
                  </div>
                </FormGroup>
              </FinalFormComponent>
            </FinalFormField>
          </Field>
          <Field
            component={[Function]}
            format={[Function]}
            id="description"
            inputColumnSize={8}
            key="description"
            label="Description"
            labelColumnSize={3}
            name="description"
            parse={[Function]}
          >
            <FinalFormField
              id="description"
              input={
                Object {
                  "name": "description",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "",
                }
              }
              inputColumnSize={8}
              label="Description"
              labelColumnSize={3}
              meta={
                Object {
                  "active": false,
                  "data": Object {},
                  "dirty": false,
                  "dirtySinceLastSubmit": false,
                  "error": undefined,
                  "initial": "",
                  "invalid": false,
                  "pristine": true,
                  "submitError": undefined,
                  "submitFailed": false,
                  "submitSucceeded": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                }
              }
            >
              <FinalFormComponent
                clearable={false}
                componentType="textfield"
                disabled={false}
                id="description"
                input={
                  Object {
                    "name": "description",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  }
                }
                inputColumnSize={8}
                label="Description"
                labelColumnSize={3}
                labelKey="label"
                meta={
                  Object {
                    "active": false,
                    "data": Object {},
                    "dirty": false,
                    "dirtySinceLastSubmit": false,
                    "error": undefined,
                    "initial": "",
                    "invalid": false,
                    "pristine": true,
                    "submitError": undefined,
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "touched": false,
                    "valid": true,
                    "visited": false,
                  }
                }
                multi={false}
                placeholder=""
                searchable={false}
                validateOnMount={false}
                valueKey="value"
              >
                <FormGroup
                  bsClass="form-group"
                  validationState={null}
                >
                  <div
                    className="form-group"
                  >
                    <Col
                      bsClass="col"
                      className="control-label"
                      componentClass="label"
                      xs={3}
                    >
                      <label
                        className="control-label col-xs-3"
                      >
                        Description
                      </label>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={8}
                    >
                      <div
                        className="col-xs-8"
                      >
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          disabled={false}
                          id="description"
                          name="description"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder=""
                          type="text"
                          value=""
                        >
                          <input
                            className="form-control"
                            disabled={false}
                            id="description"
                            name="description"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            placeholder=""
                            type="text"
                            value=""
                          />
                        </FormControl>
                      </div>
                    </Col>
                  </div>
                </FormGroup>
              </FinalFormComponent>
            </FinalFormField>
          </Field>
          <Field
            component={[Function]}
            format={[Function]}
            inputColumnSize={8}
            key="display"
            label="Display in Catalog"
            labelColumnSize={3}
            name="display"
            offText="No"
            onText="Yes"
            parse={[Function]}
          >
            <FinalFormSwitch
              input={
                Object {
                  "name": "display",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": false,
                }
              }
              inputColumnSize={8}
              label="Display in Catalog"
              labelColumnSize={3}
              meta={
                Object {
                  "active": false,
                  "data": Object {},
                  "dirty": false,
                  "dirtySinceLastSubmit": false,
                  "error": undefined,
                  "initial": false,
                  "invalid": false,
                  "pristine": true,
                  "submitError": undefined,
                  "submitFailed": false,
                  "submitSucceeded": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                }
              }
              offText="No"
              onText="Yes"
            >
              <FinalFormComponent
                clearable={false}
                componentType="switch"
                disabled={false}
                input={
                  Object {
                    "name": "display",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": false,
                  }
                }
                inputColumnSize={8}
                label="Display in Catalog"
                labelColumnSize={3}
                labelKey="label"
                meta={
                  Object {
                    "active": false,
                    "data": Object {},
                    "dirty": false,
                    "dirtySinceLastSubmit": false,
                    "error": undefined,
                    "initial": false,
                    "invalid": false,
                    "pristine": true,
                    "submitError": undefined,
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "touched": false,
                    "valid": true,
                    "visited": false,
                  }
                }
                multi={false}
                offText="No"
                onText="Yes"
                placeholder=""
                searchable={false}
                validateOnMount={false}
                valueKey="value"
              >
                <FormGroup
                  bsClass="form-group"
                  validationState={null}
                >
                  <div
                    className="form-group"
                  >
                    <Col
                      bsClass="col"
                      className="control-label"
                      componentClass="label"
                      xs={3}
                    >
                      <label
                        className="control-label col-xs-3"
                      >
                        Display in Catalog
                      </label>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={8}
                    >
                      <div
                        className="col-xs-8"
                      >
                        <Switch
                          animate={true}
                          baseClass="bootstrap-switch"
                          bsSize={null}
                          clearable={false}
                          defaultValue={true}
                          disabled={false}
                          handleWidth="auto"
                          id="display"
                          inverse={false}
                          label="Display in Catalog"
                          labelKey="label"
                          labelText=" "
                          labelWidth="auto"
                          multi={false}
                          name="display"
                          offColor="default"
                          offText="No"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onColor="primary"
                          onFocus={[Function]}
                          onText="Yes"
                          placeholder=""
                          readonly={false}
                          searchable={false}
                          tristate={false}
                          value={false}
                          valueKey="value"
                          wrapperClass="wrapper"
                        >
                          <div
                            className="bootstrap-switch wrapper bootstrap-switch-off bootstrap-switch-display bootstrap-switch-animate"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            style={
                              Object {
                                "width": "auto",
                              }
                            }
                            tabIndex="0"
                          >
                            <div
                              className="bootstrap-switch-container"
                              style={
                                Object {
                                  "marginLeft": -0,
                                  "width": "auto",
                                }
                              }
                            >
                              <span
                                className="bootstrap-switch-handle-on bootstrap-switch-primary"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "width": 0,
                                  }
                                }
                              >
                                Yes
                              </span>
                              <span
                                className="bootstrap-switch-label"
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseMove={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                style={
                                  Object {
                                    "width": 0,
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="bootstrap-switch-handle-off bootstrap-switch-default"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "width": 0,
                                  }
                                }
                              >
                                No
                              </span>
                            </div>
                          </div>
                        </Switch>
                      </div>
                    </Col>
                  </div>
                </FormGroup>
              </FinalFormComponent>
            </FinalFormSwitch>
          </Field>
          <Field
            component={[Function]}
            format={[Function]}
            inputColumnSize={8}
            key="service_template_catalog_id"
            label="Catalog"
            labelColumnSize={3}
            name="service_template_catalog_id"
            options={
              Array [
                Object {
                  "label": "Amazon Operations",
                  "value": "10000000000008",
                },
                Object {
                  "label": "Ansible Demos",
                  "value": "10000000000001",
                },
              ]
            }
            parse={[Function]}
            placeholder="<Choose>"
            searchable={true}
          >
            <FinalFormSelect
              input={
                Object {
                  "name": "service_template_catalog_id",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "",
                }
              }
              inputColumnSize={8}
              label="Catalog"
              labelColumnSize={3}
              meta={
                Object {
                  "active": false,
                  "data": Object {},
                  "dirty": false,
                  "dirtySinceLastSubmit": false,
                  "error": undefined,
                  "initial": "",
                  "invalid": false,
                  "pristine": true,
                  "submitError": undefined,
                  "submitFailed": false,
                  "submitSucceeded": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                }
              }
              options={
                Array [
                  Object {
                    "label": "Amazon Operations",
                    "value": "10000000000008",
                  },
                  Object {
                    "label": "Ansible Demos",
                    "value": "10000000000001",
                  },
                ]
              }
              placeholder="<Choose>"
              searchable={true}
            >
              <FinalFormComponent
                clearable={false}
                componentType="select"
                disabled={false}
                input={
                  Object {
                    "name": "service_template_catalog_id",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  }
                }
                inputColumnSize={8}
                label="Catalog"
                labelColumnSize={3}
                labelKey="label"
                meta={
                  Object {
                    "active": false,
                    "data": Object {},
                    "dirty": false,
                    "dirtySinceLastSubmit": false,
                    "error": undefined,
                    "initial": "",
                    "invalid": false,
                    "pristine": true,
                    "submitError": undefined,
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "touched": false,
                    "valid": true,
                    "visited": false,
                  }
                }
                multi={false}
                options={
                  Array [
                    Object {
                      "label": "Amazon Operations",
                      "value": "10000000000008",
                    },
                    Object {
                      "label": "Ansible Demos",
                      "value": "10000000000001",
                    },
                  ]
                }
                placeholder="<Choose>"
                searchable={true}
                validateOnMount={false}
                valueKey="value"
              >
                <FormGroup
                  bsClass="form-group"
                  validationState={null}
                >
                  <div
                    className="form-group"
                  >
                    <Col
                      bsClass="col"
                      className="control-label"
                      componentClass="label"
                      xs={3}
                    >
                      <label
                        className="control-label col-xs-3"
                      >
                        Catalog
                      </label>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={8}
                    >
                      <div
                        className="col-xs-8"
                      >
                        <Select
                          arrowRenderer={[Function]}
                          autosize={true}
                          backspaceRemoves={true}
                          backspaceToRemoveMessage="Press backspace to remove {label}"
                          className=" final-form-select"
                          clearAllText="Clear all"
                          clearRenderer={[Function]}
                          clearValueText="Clear value"
                          clearable={false}
                          closeOnSelect={true}
                          deleteRemoves={true}
                          delimiter=","
                          disabled={false}
                          escapeClearsValue={true}
                          filterOptions={[Function]}
                          id="service_template_catalog_id"
                          ignoreAccents={true}
                          ignoreCase={true}
                          inputProps={Object {}}
                          isLoading={false}
                          joinValues={false}
                          label="Catalog"
                          labelKey="label"
                          matchPos="any"
                          matchProp="any"
                          menuBuffer={0}
                          menuRenderer={[Function]}
                          multi={false}
                          name="service_template_catalog_id"
                          noResultsText="No results found"
                          onBlur={[Function]}
                          onBlurResetsInput={true}
                          onChange={[Function]}
                          onCloseResetsInput={true}
                          onFocus={[Function]}
                          onSelectResetsInput={true}
                          openOnClick={true}
                          optionClassName="final-form-select-option"
                          optionComponent={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Amazon Operations",
                                "value": "10000000000008",
                              },
                              Object {
                                "label": "Ansible Demos",
                                "value": "10000000000001",
                              },
                            ]
                          }
                          pageSize={5}
                          placeholder="<Choose>"
                          removeSelected={true}
                          required={false}
                          rtl={false}
                          scrollMenuIntoView={true}
                          searchable={true}
                          simpleValue={false}
                          tabSelectsValue={true}
                          trimFilter={true}
                          value=""
                          valueComponent={[Function]}
                          valueKey="value"
                        >
                          <div
                            className="Select  final-form-select is-searchable Select--single"
                          >
                            <div
                              className="Select-control"
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                            >
                              <div
                                className="Select-multi-value-wrapper"
                                id="react-select-2--value"
                              >
                                <div
                                  className="Select-placeholder"
                                >
                                  &lt;Choose&gt;
                                </div>
                                <AutosizeInput
                                  aria-activedescendant="react-select-2--value"
                                  aria-expanded="false"
                                  aria-haspopup="false"
                                  aria-owns=""
                                  className="Select-input"
                                  id="service_template_catalog_id"
                                  injectStyles={true}
                                  minWidth="5"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  role="combobox"
                                  value=""
                                >
                                  <div
                                    className="Select-input"
                                    style={
                                      Object {
                                        "display": "inline-block",
                                      }
                                    }
                                  >
                                    <input
                                      aria-activedescendant="react-select-2--value"
                                      aria-expanded="false"
                                      aria-haspopup="false"
                                      aria-owns=""
                                      id="service_template_catalog_id"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      required={false}
                                      role="combobox"
                                      style={
                                        Object {
                                          "boxSizing": "content-box",
                                          "width": "5px",
                                        }
                                      }
                                      value=""
                                    />
                                    <div
                                      style={
                                        Object {
                                          "height": 0,
                                          "left": 0,
                                          "overflow": "scroll",
                                          "position": "absolute",
                                          "top": 0,
                                          "visibility": "hidden",
                                          "whiteSpace": "pre",
                                        }
                                      }
                                    />
                                  </div>
                                </AutosizeInput>
                              </div>
                              <span
                                className="Select-arrow-zone"
                                onMouseDown={[Function]}
                              >
                                <span
                                  className="Select-arrow"
                                  onMouseDown={[Function]}
                                />
                              </span>
                            </div>
                          </div>
                        </Select>
                      </div>
                    </Col>
                  </div>
                </FormGroup>
              </FinalFormComponent>
            </FinalFormSelect>
          </Field>
          <Uncontrolled(TabContainer)
            defaultActiveKey={1}
            id="ansibleCatalogForm"
          >
            <TabContainer
              activeKey={1}
              id="ansibleCatalogForm"
              onSelect={[Function]}
            >
              <div
                id="ansibleCatalogForm"
              >
                <Nav
                  bsClass="nav nav-tabs nav-tabs-pf"
                  justified={false}
                  pullLeft={false}
                  pullRight={false}
                  stacked={false}
                >
                  <ul
                    className="nav nav-tabs nav-tabs-pf"
                    role="tablist"
                  >
                    <NavItem
                      active={true}
                      activeKey={1}
                      aria-controls="ansibleCatalogForm-pane-1"
                      disabled={false}
                      eventKey={1}
                      id="ansibleCatalogForm-tab-1"
                      key=".0"
                      onKeyDown={[Function]}
                      onSelect={[Function]}
                      role="tab"
                    >
                      <li
                        className="active"
                        role="presentation"
                      >
                        <SafeAnchor
                          aria-controls="ansibleCatalogForm-pane-1"
                          aria-selected={true}
                          componentClass="a"
                          disabled={false}
                          id="ansibleCatalogForm-tab-1"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          role="tab"
                        >
                          <a
                            aria-controls="ansibleCatalogForm-pane-1"
                            aria-selected={true}
                            href="#"
                            id="ansibleCatalogForm-tab-1"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="tab"
                          >
                            Provisioning
                          </a>
                        </SafeAnchor>
                      </li>
                    </NavItem>
                    <NavItem
                      active={false}
                      activeKey={1}
                      aria-controls="ansibleCatalogForm-pane-2"
                      disabled={false}
                      eventKey={2}
                      id="ansibleCatalogForm-tab-2"
                      key=".1"
                      onKeyDown={[Function]}
                      onSelect={[Function]}
                      role="tab"
                      tabIndex={-1}
                    >
                      <li
                        className=""
                        role="presentation"
                      >
                        <SafeAnchor
                          aria-controls="ansibleCatalogForm-pane-2"
                          aria-selected={false}
                          componentClass="a"
                          disabled={false}
                          id="ansibleCatalogForm-tab-2"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          role="tab"
                          tabIndex={-1}
                        >
                          <a
                            aria-controls="ansibleCatalogForm-pane-2"
                            aria-selected={false}
                            href="#"
                            id="ansibleCatalogForm-tab-2"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="tab"
                            tabIndex={-1}
                          >
                            Retirement
                          </a>
                        </SafeAnchor>
                      </li>
                    </NavItem>
                  </ul>
                </Nav>
                <TabContent
                  animation={true}
                  bsClass="tab"
                  componentClass="div"
                  mountOnEnter={false}
                  unmountOnExit={false}
                >
                  <div
                    className="tab-content"
                  >
                    <TabPane
                      bsClass="tab-pane"
                      eventKey={1}
                      mountOnEnter={true}
                      unmountOnExit={true}
                    >
                      <Fade
                        appear={false}
                        in={true}
                        mountOnEnter={true}
                        onEnter={[Function]}
                        onExited={[Function]}
                        timeout={300}
                        unmountOnExit={true}
                      >
                        <Transition
                          appear={false}
                          enter={true}
                          exit={true}
                          in={true}
                          mountOnEnter={true}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <div
                            aria-hidden={false}
                            aria-labelledby="ansibleCatalogForm-tab-1"
                            className="fade tab-pane active in"
                            id="ansibleCatalogForm-pane-1"
                            role="tabpanel"
                          >
                            <Connect(AnsiblePlaybookFields)
                              addExtraVars={[Function]}
                              changeField={[Function]}
                              formValues={
                                Object {
                                  "description": "",
                                  "dialogOption": "existing",
                                  "dialog_id": "",
                                  "display": false,
                                  "long_description": "",
                                  "name": "",
                                  "provisioning_become_enabled": false,
                                  "provisioning_cloud_credential_id": "",
                                  "provisioning_cloud_type": "",
                                  "provisioning_credential_id": "",
                                  "provisioning_execution_ttl": "",
                                  "provisioning_extra_vars": Array [],
                                  "provisioning_hosts": "localhost",
                                  "provisioning_log_output": "on_error",
                                  "provisioning_playbook_id": "",
                                  "provisioning_repository_id": "",
                                  "provisioning_vault_credential_id": "",
                                  "provisioning_verbosity": 0,
                                  "remove_resources": "no_without_playbook",
                                  "retirement_become_enabled": false,
                                  "retirement_cloud_credential_id": "",
                                  "retirement_cloud_type": "",
                                  "retirement_credential_id": "",
                                  "retirement_execution_ttl": "",
                                  "retirement_extra_vars": Array [],
                                  "retirement_hosts": "localhost",
                                  "retirement_log_output": "on_error",
                                  "retirement_playbook_id": "",
                                  "retirement_repository_id": "",
                                  "retirement_vault_credential_id": "",
                                  "retirement_verbosity": 0,
                                  "service_template_catalog_id": "",
                                }
                              }
                              prefix="provisioning"
                              region={10}
                            >
                              <AnsiblePlaybookFields
                                addExtraVars={[Function]}
                                changeField={[Function]}
                                credentialsRequest={[Function]}
                                data={
                                  Object {
                                    "catalogItem": Object {
                                      "config_info": Object {
                                        "provision": Object {
                                          "cloud_credential_id": 123,
                                        },
                                        "retirement": Object {},
                                      },
                                      "description": "test",
                                      "id": 1234,
                                      "name": "test",
                                    },
                                    "cloudCredential": Object {
                                      "type": "test",
                                    },
                                    "dropdowns": Object {
                                      "catalogs": Array [
                                        Object {
                                          "label": "Amazon Operations",
                                          "value": "10000000000008",
                                        },
                                        Object {
                                          "label": "Ansible Demos",
                                          "value": "10000000000001",
                                        },
                                      ],
                                      "cloudTypes": Array [
                                        Object {
                                          "label": "Amazon",
                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::AmazonCredential",
                                        },
                                        Object {
                                          "label": "Azure",
                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::AzureCredential",
                                        },
                                        Object {
                                          "label": "Google Compute Engine",
                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::GoogleCredential",
                                        },
                                        Object {
                                          "label": "OpenStack",
                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::OpenstackCredential",
                                        },
                                        Object {
                                          "label": "Red Hat Virtualization",
                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::RhvCredential",
                                        },
                                        Object {
                                          "label": "VMware",
                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::VmwareCredential",
                                        },
                                      ],
                                      "dialogs": Array [
                                        Object {
                                          "label": "101-vm-simple-rhel Dialog",
                                          "value": "10000000000003",
                                        },
                                      ],
                                      "machineCredentials": Array [
                                        Object {
                                          "label": "Default Credential",
                                          "value": "10000000000064",
                                        },
                                      ],
                                      "repos": Array [
                                        Object {
                                          "label": "Sample Playbooks (jeromemarc)",
                                          "value": "10000000000014",
                                        },
                                        Object {
                                          "label": "workflow-demo (jeromemarc)",
                                          "value": "10000000000013",
                                        },
                                      ],
                                    },
                                  }
                                }
                                duplicateDropdowns={[Function]}
                                formValues={
                                  Object {
                                    "description": "",
                                    "dialogOption": "existing",
                                    "dialog_id": "",
                                    "display": false,
                                    "long_description": "",
                                    "name": "",
                                    "provisioning_become_enabled": false,
                                    "provisioning_cloud_credential_id": "",
                                    "provisioning_cloud_type": "",
                                    "provisioning_credential_id": "",
                                    "provisioning_execution_ttl": "",
                                    "provisioning_extra_vars": Array [],
                                    "provisioning_hosts": "localhost",
                                    "provisioning_log_output": "on_error",
                                    "provisioning_playbook_id": "",
                                    "provisioning_repository_id": "",
                                    "provisioning_vault_credential_id": "",
                                    "provisioning_verbosity": 0,
                                    "remove_resources": "no_without_playbook",
                                    "retirement_become_enabled": false,
                                    "retirement_cloud_credential_id": "",
                                    "retirement_cloud_type": "",
                                    "retirement_credential_id": "",
                                    "retirement_execution_ttl": "",
                                    "retirement_extra_vars": Array [],
                                    "retirement_hosts": "localhost",
                                    "retirement_log_output": "on_error",
                                    "retirement_playbook_id": "",
                                    "retirement_repository_id": "",
                                    "retirement_vault_credential_id": "",
                                    "retirement_verbosity": 0,
                                    "service_template_catalog_id": "",
                                  }
                                }
                                loadCatalogItem={[Function]}
                                loadCatalogs={[Function]}
                                loadCloudCredential={[Function]}
                                loadCloudCredentials={[Function]}
                                loadCloudTypes={[Function]}
                                loadCredentials={[Function]}
                                loadDialogs={[Function]}
                                loadPlaybooks={[Function]}
                                loadRepos={[Function]}
                                prefix="provisioning"
                                region={10}
                              >
                                <div
                                  className="row"
                                >
                                  <div
                                    className="col-md-12 col-lg-6"
                                  >
                                    <Field
                                      format={[Function]}
                                      label="Repository"
                                      name="provisioning_repository_id"
                                      parse={[Function]}
                                      render={[Function]}
                                      validate={[Function]}
                                      validateOnMount={true}
                                    >
                                      <FinalFormSelect
                                        input={
                                          Object {
                                            "name": "provisioning_repository_id",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": "",
                                          }
                                        }
                                        inputColumnSize={8}
                                        label="Repository"
                                        labelColumnSize={3}
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": "Required",
                                            "initial": "",
                                            "invalid": true,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": false,
                                            "visited": false,
                                          }
                                        }
                                        name="provisioning_repository_id"
                                        options={
                                          Array [
                                            Object {
                                              "label": "Sample Playbooks (jeromemarc)",
                                              "value": "10000000000014",
                                            },
                                            Object {
                                              "label": "workflow-demo (jeromemarc)",
                                              "value": "10000000000013",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        searchable={true}
                                        validate={[Function]}
                                        validateOnMount={true}
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="select"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "provisioning_repository_id",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": "",
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Repository"
                                          labelColumnSize={3}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": "Required",
                                              "initial": "",
                                              "invalid": true,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": false,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          name="provisioning_repository_id"
                                          options={
                                            Array [
                                              Object {
                                                "label": "Sample Playbooks (jeromemarc)",
                                                "value": "10000000000014",
                                              },
                                              Object {
                                                "label": "workflow-demo (jeromemarc)",
                                                "value": "10000000000013",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          searchable={true}
                                          validate={[Function]}
                                          validateOnMount={true}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState="error"
                                          >
                                            <div
                                              className="form-group has-error"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={3}
                                              >
                                                <label
                                                  className="control-label col-xs-3"
                                                >
                                                  Repository
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <Select
                                                    arrowRenderer={[Function]}
                                                    autosize={true}
                                                    backspaceRemoves={true}
                                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                                    className=" final-form-select"
                                                    clearAllText="Clear all"
                                                    clearRenderer={[Function]}
                                                    clearValueText="Clear value"
                                                    clearable={false}
                                                    closeOnSelect={true}
                                                    deleteRemoves={true}
                                                    delimiter=","
                                                    disabled={false}
                                                    escapeClearsValue={true}
                                                    filterOptions={[Function]}
                                                    id="provisioning_repository_id"
                                                    ignoreAccents={true}
                                                    ignoreCase={true}
                                                    inputProps={Object {}}
                                                    isLoading={false}
                                                    joinValues={false}
                                                    label="Repository"
                                                    labelKey="label"
                                                    matchPos="any"
                                                    matchProp="any"
                                                    menuBuffer={0}
                                                    menuRenderer={[Function]}
                                                    multi={false}
                                                    name="provisioning_repository_id"
                                                    noResultsText="No results found"
                                                    onBlur={[Function]}
                                                    onBlurResetsInput={true}
                                                    onChange={[Function]}
                                                    onCloseResetsInput={true}
                                                    onFocus={[Function]}
                                                    onSelectResetsInput={true}
                                                    openOnClick={true}
                                                    optionClassName="final-form-select-option"
                                                    optionComponent={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "label": "Sample Playbooks (jeromemarc)",
                                                          "value": "10000000000014",
                                                        },
                                                        Object {
                                                          "label": "workflow-demo (jeromemarc)",
                                                          "value": "10000000000013",
                                                        },
                                                      ]
                                                    }
                                                    pageSize={5}
                                                    placeholder="<Choose>"
                                                    removeSelected={true}
                                                    required={false}
                                                    rtl={false}
                                                    scrollMenuIntoView={true}
                                                    searchable={true}
                                                    simpleValue={false}
                                                    tabSelectsValue={true}
                                                    trimFilter={true}
                                                    validate={[Function]}
                                                    value=""
                                                    valueComponent={[Function]}
                                                    valueKey="value"
                                                  >
                                                    <div
                                                      className="Select  final-form-select is-searchable Select--single"
                                                    >
                                                      <div
                                                        className="Select-control"
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                      >
                                                        <div
                                                          className="Select-multi-value-wrapper"
                                                          id="react-select-3--value"
                                                        >
                                                          <div
                                                            className="Select-placeholder"
                                                          >
                                                            &lt;Choose&gt;
                                                          </div>
                                                          <AutosizeInput
                                                            aria-activedescendant="react-select-3--value"
                                                            aria-expanded="false"
                                                            aria-haspopup="false"
                                                            aria-owns=""
                                                            className="Select-input"
                                                            id="provisioning_repository_id"
                                                            injectStyles={true}
                                                            minWidth="5"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            required={false}
                                                            role="combobox"
                                                            value=""
                                                          >
                                                            <div
                                                              className="Select-input"
                                                              style={
                                                                Object {
                                                                  "display": "inline-block",
                                                                }
                                                              }
                                                            >
                                                              <input
                                                                aria-activedescendant="react-select-3--value"
                                                                aria-expanded="false"
                                                                aria-haspopup="false"
                                                                aria-owns=""
                                                                id="provisioning_repository_id"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                required={false}
                                                                role="combobox"
                                                                style={
                                                                  Object {
                                                                    "boxSizing": "content-box",
                                                                    "width": "5px",
                                                                  }
                                                                }
                                                                value=""
                                                              />
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "height": 0,
                                                                    "left": 0,
                                                                    "overflow": "scroll",
                                                                    "position": "absolute",
                                                                    "top": 0,
                                                                    "visibility": "hidden",
                                                                    "whiteSpace": "pre",
                                                                  }
                                                                }
                                                              />
                                                            </div>
                                                          </AutosizeInput>
                                                        </div>
                                                        <span
                                                          className="Select-arrow-zone"
                                                          onMouseDown={[Function]}
                                                        >
                                                          <span
                                                            className="Select-arrow"
                                                            onMouseDown={[Function]}
                                                          />
                                                        </span>
                                                      </div>
                                                    </div>
                                                  </Select>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                  >
                                                    <span
                                                      className="help-block"
                                                    >
                                                      Required
                                                    </span>
                                                  </HelpBlock>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormSelect>
                                    </Field>
                                    <Field
                                      component={[Function]}
                                      format={[Function]}
                                      inputColumnSize={8}
                                      key="provisioning_playbook_id"
                                      label="Playbook"
                                      labelColumnSize={3}
                                      name="provisioning_playbook_id"
                                      options={Array []}
                                      parse={[Function]}
                                      placeholder="<Choose>"
                                      validate={[Function]}
                                      validateOnMount={true}
                                    >
                                      <FinalFormSelect
                                        input={
                                          Object {
                                            "name": "provisioning_playbook_id",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": "",
                                          }
                                        }
                                        inputColumnSize={8}
                                        label="Playbook"
                                        labelColumnSize={3}
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": "Required",
                                            "initial": "",
                                            "invalid": true,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": false,
                                            "visited": false,
                                          }
                                        }
                                        options={Array []}
                                        placeholder="<Choose>"
                                        validateOnMount={true}
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="select"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "provisioning_playbook_id",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": "",
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Playbook"
                                          labelColumnSize={3}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": "Required",
                                              "initial": "",
                                              "invalid": true,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": false,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          options={Array []}
                                          placeholder="<Choose>"
                                          searchable={false}
                                          validateOnMount={true}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState="error"
                                          >
                                            <div
                                              className="form-group has-error"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={3}
                                              >
                                                <label
                                                  className="control-label col-xs-3"
                                                >
                                                  Playbook
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <Select
                                                    arrowRenderer={[Function]}
                                                    autosize={true}
                                                    backspaceRemoves={true}
                                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                                    className=" final-form-select"
                                                    clearAllText="Clear all"
                                                    clearRenderer={[Function]}
                                                    clearValueText="Clear value"
                                                    clearable={false}
                                                    closeOnSelect={true}
                                                    deleteRemoves={true}
                                                    delimiter=","
                                                    disabled={false}
                                                    escapeClearsValue={true}
                                                    filterOptions={[Function]}
                                                    id="provisioning_playbook_id"
                                                    ignoreAccents={true}
                                                    ignoreCase={true}
                                                    inputProps={Object {}}
                                                    isLoading={false}
                                                    joinValues={false}
                                                    label="Playbook"
                                                    labelKey="label"
                                                    matchPos="any"
                                                    matchProp="any"
                                                    menuBuffer={0}
                                                    menuRenderer={[Function]}
                                                    multi={false}
                                                    name="provisioning_playbook_id"
                                                    noResultsText="No results found"
                                                    onBlur={[Function]}
                                                    onBlurResetsInput={true}
                                                    onChange={[Function]}
                                                    onCloseResetsInput={true}
                                                    onFocus={[Function]}
                                                    onSelectResetsInput={true}
                                                    openOnClick={true}
                                                    optionClassName="final-form-select-option"
                                                    optionComponent={[Function]}
                                                    options={Array []}
                                                    pageSize={5}
                                                    placeholder="<Choose>"
                                                    removeSelected={true}
                                                    required={false}
                                                    rtl={false}
                                                    scrollMenuIntoView={true}
                                                    searchable={false}
                                                    simpleValue={false}
                                                    tabSelectsValue={true}
                                                    trimFilter={true}
                                                    value=""
                                                    valueComponent={[Function]}
                                                    valueKey="value"
                                                  >
                                                    <div
                                                      className="Select  final-form-select Select--single"
                                                    >
                                                      <div
                                                        className="Select-control"
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                      >
                                                        <div
                                                          className="Select-multi-value-wrapper"
                                                          id="react-select-4--value"
                                                        >
                                                          <div
                                                            className="Select-placeholder"
                                                          >
                                                            &lt;Choose&gt;
                                                          </div>
                                                          <div
                                                            aria-activedescendant="react-select-4--value"
                                                            aria-disabled="false"
                                                            aria-expanded={false}
                                                            aria-owns=""
                                                            className="Select-input"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "border": 0,
                                                                "display": "inline-block",
                                                                "width": 1,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          />
                                                        </div>
                                                        <span
                                                          className="Select-arrow-zone"
                                                          onMouseDown={[Function]}
                                                        >
                                                          <span
                                                            className="Select-arrow"
                                                            onMouseDown={[Function]}
                                                          />
                                                        </span>
                                                      </div>
                                                    </div>
                                                  </Select>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                  >
                                                    <span
                                                      className="help-block"
                                                    >
                                                      Required
                                                    </span>
                                                  </HelpBlock>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormSelect>
                                    </Field>
                                    <Field
                                      component={[Function]}
                                      format={[Function]}
                                      inputColumnSize={8}
                                      key="provisioning_credential_id"
                                      label="Machine Credential"
                                      labelColumnSize={3}
                                      name="provisioning_credential_id"
                                      options={
                                        Array [
                                          Object {
                                            "label": "Default Credential",
                                            "value": "10000000000064",
                                          },
                                        ]
                                      }
                                      parse={[Function]}
                                      placeholder="<Choose>"
                                      validate={[Function]}
                                      validateOnMount={true}
                                    >
                                      <FinalFormSelect
                                        input={
                                          Object {
                                            "name": "provisioning_credential_id",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": "",
                                          }
                                        }
                                        inputColumnSize={8}
                                        label="Machine Credential"
                                        labelColumnSize={3}
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": "Required",
                                            "initial": "",
                                            "invalid": true,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": false,
                                            "visited": false,
                                          }
                                        }
                                        options={
                                          Array [
                                            Object {
                                              "label": "Default Credential",
                                              "value": "10000000000064",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        validateOnMount={true}
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="select"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "provisioning_credential_id",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": "",
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Machine Credential"
                                          labelColumnSize={3}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": "Required",
                                              "initial": "",
                                              "invalid": true,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": false,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "Default Credential",
                                                "value": "10000000000064",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          searchable={false}
                                          validateOnMount={true}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState="error"
                                          >
                                            <div
                                              className="form-group has-error"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={3}
                                              >
                                                <label
                                                  className="control-label col-xs-3"
                                                >
                                                  Machine Credential
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <Select
                                                    arrowRenderer={[Function]}
                                                    autosize={true}
                                                    backspaceRemoves={true}
                                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                                    className=" final-form-select"
                                                    clearAllText="Clear all"
                                                    clearRenderer={[Function]}
                                                    clearValueText="Clear value"
                                                    clearable={false}
                                                    closeOnSelect={true}
                                                    deleteRemoves={true}
                                                    delimiter=","
                                                    disabled={false}
                                                    escapeClearsValue={true}
                                                    filterOptions={[Function]}
                                                    id="provisioning_credential_id"
                                                    ignoreAccents={true}
                                                    ignoreCase={true}
                                                    inputProps={Object {}}
                                                    isLoading={false}
                                                    joinValues={false}
                                                    label="Machine Credential"
                                                    labelKey="label"
                                                    matchPos="any"
                                                    matchProp="any"
                                                    menuBuffer={0}
                                                    menuRenderer={[Function]}
                                                    multi={false}
                                                    name="provisioning_credential_id"
                                                    noResultsText="No results found"
                                                    onBlur={[Function]}
                                                    onBlurResetsInput={true}
                                                    onChange={[Function]}
                                                    onCloseResetsInput={true}
                                                    onFocus={[Function]}
                                                    onSelectResetsInput={true}
                                                    openOnClick={true}
                                                    optionClassName="final-form-select-option"
                                                    optionComponent={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "label": "Default Credential",
                                                          "value": "10000000000064",
                                                        },
                                                      ]
                                                    }
                                                    pageSize={5}
                                                    placeholder="<Choose>"
                                                    removeSelected={true}
                                                    required={false}
                                                    rtl={false}
                                                    scrollMenuIntoView={true}
                                                    searchable={false}
                                                    simpleValue={false}
                                                    tabSelectsValue={true}
                                                    trimFilter={true}
                                                    value=""
                                                    valueComponent={[Function]}
                                                    valueKey="value"
                                                  >
                                                    <div
                                                      className="Select  final-form-select Select--single"
                                                    >
                                                      <div
                                                        className="Select-control"
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                      >
                                                        <div
                                                          className="Select-multi-value-wrapper"
                                                          id="react-select-5--value"
                                                        >
                                                          <div
                                                            className="Select-placeholder"
                                                          >
                                                            &lt;Choose&gt;
                                                          </div>
                                                          <div
                                                            aria-activedescendant="react-select-5--value"
                                                            aria-disabled="false"
                                                            aria-expanded={false}
                                                            aria-owns=""
                                                            className="Select-input"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "border": 0,
                                                                "display": "inline-block",
                                                                "width": 1,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          />
                                                        </div>
                                                        <span
                                                          className="Select-arrow-zone"
                                                          onMouseDown={[Function]}
                                                        >
                                                          <span
                                                            className="Select-arrow"
                                                            onMouseDown={[Function]}
                                                          />
                                                        </span>
                                                      </div>
                                                    </div>
                                                  </Select>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                  >
                                                    <span
                                                      className="help-block"
                                                    >
                                                      Required
                                                    </span>
                                                  </HelpBlock>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormSelect>
                                    </Field>
                                    <Field
                                      component={[Function]}
                                      format={[Function]}
                                      inputColumnSize={8}
                                      key="provisioning_vault_credential_id"
                                      label="Vault Credential"
                                      labelColumnSize={3}
                                      name="provisioning_vault_credential_id"
                                      options={Array []}
                                      parse={[Function]}
                                      placeholder="<Choose>"
                                    >
                                      <FinalFormSelect
                                        input={
                                          Object {
                                            "name": "provisioning_vault_credential_id",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": "",
                                          }
                                        }
                                        inputColumnSize={8}
                                        label="Vault Credential"
                                        labelColumnSize={3}
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": undefined,
                                            "initial": "",
                                            "invalid": false,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": true,
                                            "visited": false,
                                          }
                                        }
                                        options={Array []}
                                        placeholder="<Choose>"
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="select"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "provisioning_vault_credential_id",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": "",
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Vault Credential"
                                          labelColumnSize={3}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": undefined,
                                              "initial": "",
                                              "invalid": false,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": true,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          options={Array []}
                                          placeholder="<Choose>"
                                          searchable={false}
                                          validateOnMount={false}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState={null}
                                          >
                                            <div
                                              className="form-group"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={3}
                                              >
                                                <label
                                                  className="control-label col-xs-3"
                                                >
                                                  Vault Credential
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <Select
                                                    arrowRenderer={[Function]}
                                                    autosize={true}
                                                    backspaceRemoves={true}
                                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                                    className=" final-form-select"
                                                    clearAllText="Clear all"
                                                    clearRenderer={[Function]}
                                                    clearValueText="Clear value"
                                                    clearable={false}
                                                    closeOnSelect={true}
                                                    deleteRemoves={true}
                                                    delimiter=","
                                                    disabled={false}
                                                    escapeClearsValue={true}
                                                    filterOptions={[Function]}
                                                    id="provisioning_vault_credential_id"
                                                    ignoreAccents={true}
                                                    ignoreCase={true}
                                                    inputProps={Object {}}
                                                    isLoading={false}
                                                    joinValues={false}
                                                    label="Vault Credential"
                                                    labelKey="label"
                                                    matchPos="any"
                                                    matchProp="any"
                                                    menuBuffer={0}
                                                    menuRenderer={[Function]}
                                                    multi={false}
                                                    name="provisioning_vault_credential_id"
                                                    noResultsText="No results found"
                                                    onBlur={[Function]}
                                                    onBlurResetsInput={true}
                                                    onChange={[Function]}
                                                    onCloseResetsInput={true}
                                                    onFocus={[Function]}
                                                    onSelectResetsInput={true}
                                                    openOnClick={true}
                                                    optionClassName="final-form-select-option"
                                                    optionComponent={[Function]}
                                                    options={Array []}
                                                    pageSize={5}
                                                    placeholder="<Choose>"
                                                    removeSelected={true}
                                                    required={false}
                                                    rtl={false}
                                                    scrollMenuIntoView={true}
                                                    searchable={false}
                                                    simpleValue={false}
                                                    tabSelectsValue={true}
                                                    trimFilter={true}
                                                    value=""
                                                    valueComponent={[Function]}
                                                    valueKey="value"
                                                  >
                                                    <div
                                                      className="Select  final-form-select Select--single"
                                                    >
                                                      <div
                                                        className="Select-control"
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                      >
                                                        <div
                                                          className="Select-multi-value-wrapper"
                                                          id="react-select-6--value"
                                                        >
                                                          <div
                                                            className="Select-placeholder"
                                                          >
                                                            &lt;Choose&gt;
                                                          </div>
                                                          <div
                                                            aria-activedescendant="react-select-6--value"
                                                            aria-disabled="false"
                                                            aria-expanded={false}
                                                            aria-owns=""
                                                            className="Select-input"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "border": 0,
                                                                "display": "inline-block",
                                                                "width": 1,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          />
                                                        </div>
                                                        <span
                                                          className="Select-arrow-zone"
                                                          onMouseDown={[Function]}
                                                        >
                                                          <span
                                                            className="Select-arrow"
                                                            onMouseDown={[Function]}
                                                          />
                                                        </span>
                                                      </div>
                                                    </div>
                                                  </Select>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormSelect>
                                    </Field>
                                    <Field
                                      component={[Function]}
                                      format={[Function]}
                                      inputColumnSize={8}
                                      key="provisioning_hosts"
                                      label="Hostnames"
                                      labelColumnSize={3}
                                      name="provisioning_hosts"
                                      parse={[Function]}
                                    >
                                      <FinalFormTextArea
                                        input={
                                          Object {
                                            "name": "provisioning_hosts",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": "localhost",
                                          }
                                        }
                                        inputColumnSize={8}
                                        label="Hostnames"
                                        labelColumnSize={3}
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": undefined,
                                            "initial": "localhost",
                                            "invalid": false,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": true,
                                            "visited": false,
                                          }
                                        }
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="textarea"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "provisioning_hosts",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": "localhost",
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Hostnames"
                                          labelColumnSize={3}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": undefined,
                                              "initial": "localhost",
                                              "invalid": false,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": true,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          placeholder=""
                                          searchable={false}
                                          validateOnMount={false}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState={null}
                                          >
                                            <div
                                              className="form-group"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={3}
                                              >
                                                <label
                                                  className="control-label col-xs-3"
                                                >
                                                  Hostnames
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    componentClass="textarea"
                                                    disabled={false}
                                                    id="provisioning_hosts"
                                                    name="provisioning_hosts"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    placeholder=""
                                                    value="localhost"
                                                  >
                                                    <textarea
                                                      className="form-control"
                                                      disabled={false}
                                                      id="provisioning_hosts"
                                                      name="provisioning_hosts"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      placeholder=""
                                                      value="localhost"
                                                    />
                                                  </FormControl>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormTextArea>
                                    </Field>
                                    <Field
                                      component={[Function]}
                                      format={[Function]}
                                      inputColumnSize={8}
                                      key="provisioning_execution_ttl"
                                      label="Max TTL (mins)"
                                      labelColumnSize={3}
                                      name="provisioning_execution_ttl"
                                      parse={[Function]}
                                    >
                                      <FinalFormField
                                        input={
                                          Object {
                                            "name": "provisioning_execution_ttl",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": "",
                                          }
                                        }
                                        inputColumnSize={8}
                                        label="Max TTL (mins)"
                                        labelColumnSize={3}
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": undefined,
                                            "initial": "",
                                            "invalid": false,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": true,
                                            "visited": false,
                                          }
                                        }
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="textfield"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "provisioning_execution_ttl",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": "",
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Max TTL (mins)"
                                          labelColumnSize={3}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": undefined,
                                              "initial": "",
                                              "invalid": false,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": true,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          placeholder=""
                                          searchable={false}
                                          validateOnMount={false}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState={null}
                                          >
                                            <div
                                              className="form-group"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={3}
                                              >
                                                <label
                                                  className="control-label col-xs-3"
                                                >
                                                  Max TTL (mins)
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    componentClass="input"
                                                    disabled={false}
                                                    id="provisioning_execution_ttl"
                                                    name="provisioning_execution_ttl"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    placeholder=""
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="form-control"
                                                      disabled={false}
                                                      id="provisioning_execution_ttl"
                                                      name="provisioning_execution_ttl"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      placeholder=""
                                                      type="text"
                                                      value=""
                                                    />
                                                  </FormControl>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormField>
                                    </Field>
                                    <Field
                                      component={[Function]}
                                      format={[Function]}
                                      inputColumnSize={8}
                                      key="provisioning_log_output"
                                      label="Logging Output"
                                      labelColumnSize={3}
                                      name="provisioning_log_output"
                                      options={
                                        Array [
                                          Object {
                                            "label": "On Error",
                                            "value": "on_error",
                                          },
                                          Object {
                                            "label": "Always",
                                            "value": "always",
                                          },
                                          Object {
                                            "label": "Never",
                                            "value": "never",
                                          },
                                        ]
                                      }
                                      parse={[Function]}
                                      placeholder="<Choose>"
                                    >
                                      <FinalFormSelect
                                        input={
                                          Object {
                                            "name": "provisioning_log_output",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": "on_error",
                                          }
                                        }
                                        inputColumnSize={8}
                                        label="Logging Output"
                                        labelColumnSize={3}
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": undefined,
                                            "initial": "on_error",
                                            "invalid": false,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": true,
                                            "visited": false,
                                          }
                                        }
                                        options={
                                          Array [
                                            Object {
                                              "label": "On Error",
                                              "value": "on_error",
                                            },
                                            Object {
                                              "label": "Always",
                                              "value": "always",
                                            },
                                            Object {
                                              "label": "Never",
                                              "value": "never",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="select"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "provisioning_log_output",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": "on_error",
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Logging Output"
                                          labelColumnSize={3}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": undefined,
                                              "initial": "on_error",
                                              "invalid": false,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": true,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "On Error",
                                                "value": "on_error",
                                              },
                                              Object {
                                                "label": "Always",
                                                "value": "always",
                                              },
                                              Object {
                                                "label": "Never",
                                                "value": "never",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          searchable={false}
                                          validateOnMount={false}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState={null}
                                          >
                                            <div
                                              className="form-group"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={3}
                                              >
                                                <label
                                                  className="control-label col-xs-3"
                                                >
                                                  Logging Output
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <Select
                                                    arrowRenderer={[Function]}
                                                    autosize={true}
                                                    backspaceRemoves={true}
                                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                                    className=" final-form-select"
                                                    clearAllText="Clear all"
                                                    clearRenderer={[Function]}
                                                    clearValueText="Clear value"
                                                    clearable={false}
                                                    closeOnSelect={true}
                                                    deleteRemoves={true}
                                                    delimiter=","
                                                    disabled={false}
                                                    escapeClearsValue={true}
                                                    filterOptions={[Function]}
                                                    id="provisioning_log_output"
                                                    ignoreAccents={true}
                                                    ignoreCase={true}
                                                    inputProps={Object {}}
                                                    isLoading={false}
                                                    joinValues={false}
                                                    label="Logging Output"
                                                    labelKey="label"
                                                    matchPos="any"
                                                    matchProp="any"
                                                    menuBuffer={0}
                                                    menuRenderer={[Function]}
                                                    multi={false}
                                                    name="provisioning_log_output"
                                                    noResultsText="No results found"
                                                    onBlur={[Function]}
                                                    onBlurResetsInput={true}
                                                    onChange={[Function]}
                                                    onCloseResetsInput={true}
                                                    onFocus={[Function]}
                                                    onSelectResetsInput={true}
                                                    openOnClick={true}
                                                    optionClassName="final-form-select-option"
                                                    optionComponent={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "label": "On Error",
                                                          "value": "on_error",
                                                        },
                                                        Object {
                                                          "label": "Always",
                                                          "value": "always",
                                                        },
                                                        Object {
                                                          "label": "Never",
                                                          "value": "never",
                                                        },
                                                      ]
                                                    }
                                                    pageSize={5}
                                                    placeholder="<Choose>"
                                                    removeSelected={true}
                                                    required={false}
                                                    rtl={false}
                                                    scrollMenuIntoView={true}
                                                    searchable={false}
                                                    simpleValue={false}
                                                    tabSelectsValue={true}
                                                    trimFilter={true}
                                                    value="on_error"
                                                    valueComponent={[Function]}
                                                    valueKey="value"
                                                  >
                                                    <div
                                                      className="Select  final-form-select has-value Select--single"
                                                    >
                                                      <input
                                                        disabled={false}
                                                        key="hidden.0"
                                                        name="provisioning_log_output"
                                                        type="hidden"
                                                        value="on_error"
                                                      />
                                                      <div
                                                        className="Select-control"
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                      >
                                                        <div
                                                          className="Select-multi-value-wrapper"
                                                          id="react-select-7--value"
                                                        >
                                                          <Value
                                                            disabled={false}
                                                            id="react-select-7--value-item"
                                                            instancePrefix="react-select-7-"
                                                            onClick={null}
                                                            placeholder="<Choose>"
                                                            value={
                                                              Object {
                                                                "label": "On Error",
                                                                "value": "on_error",
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="Select-value"
                                                            >
                                                              <span
                                                                aria-selected="true"
                                                                className="Select-value-label"
                                                                id="react-select-7--value-item"
                                                                role="option"
                                                              >
                                                                On Error
                                                              </span>
                                                            </div>
                                                          </Value>
                                                          <div
                                                            aria-activedescendant="react-select-7--value"
                                                            aria-disabled="false"
                                                            aria-expanded={false}
                                                            aria-owns=""
                                                            className="Select-input"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "border": 0,
                                                                "display": "inline-block",
                                                                "width": 1,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          />
                                                        </div>
                                                        <span
                                                          className="Select-arrow-zone"
                                                          onMouseDown={[Function]}
                                                        >
                                                          <span
                                                            className="Select-arrow"
                                                            onMouseDown={[Function]}
                                                          />
                                                        </span>
                                                      </div>
                                                    </div>
                                                  </Select>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormSelect>
                                    </Field>
                                    <Field
                                      component={[Function]}
                                      format={[Function]}
                                      inputColumnSize={8}
                                      key="provisioning_become_enabled"
                                      label="Escalate Privileges"
                                      labelColumnSize={3}
                                      name="provisioning_become_enabled"
                                      offText="No"
                                      onText="Yes"
                                      parse={[Function]}
                                    >
                                      <FinalFormSwitch
                                        input={
                                          Object {
                                            "name": "provisioning_become_enabled",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": false,
                                          }
                                        }
                                        inputColumnSize={8}
                                        label="Escalate Privileges"
                                        labelColumnSize={3}
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": undefined,
                                            "initial": false,
                                            "invalid": false,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": true,
                                            "visited": false,
                                          }
                                        }
                                        offText="No"
                                        onText="Yes"
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="switch"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "provisioning_become_enabled",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": false,
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Escalate Privileges"
                                          labelColumnSize={3}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": undefined,
                                              "initial": false,
                                              "invalid": false,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": true,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          offText="No"
                                          onText="Yes"
                                          placeholder=""
                                          searchable={false}
                                          validateOnMount={false}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState={null}
                                          >
                                            <div
                                              className="form-group"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={3}
                                              >
                                                <label
                                                  className="control-label col-xs-3"
                                                >
                                                  Escalate Privileges
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <Switch
                                                    animate={true}
                                                    baseClass="bootstrap-switch"
                                                    bsSize={null}
                                                    clearable={false}
                                                    defaultValue={true}
                                                    disabled={false}
                                                    handleWidth="auto"
                                                    id="provisioning_become_enabled"
                                                    inverse={false}
                                                    label="Escalate Privileges"
                                                    labelKey="label"
                                                    labelText=" "
                                                    labelWidth="auto"
                                                    multi={false}
                                                    name="provisioning_become_enabled"
                                                    offColor="default"
                                                    offText="No"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onColor="primary"
                                                    onFocus={[Function]}
                                                    onText="Yes"
                                                    placeholder=""
                                                    readonly={false}
                                                    searchable={false}
                                                    tristate={false}
                                                    value={false}
                                                    valueKey="value"
                                                    wrapperClass="wrapper"
                                                  >
                                                    <div
                                                      className="bootstrap-switch wrapper bootstrap-switch-off bootstrap-switch-provisioning_become_enabled bootstrap-switch-animate"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      style={
                                                        Object {
                                                          "width": "auto",
                                                        }
                                                      }
                                                      tabIndex="0"
                                                    >
                                                      <div
                                                        className="bootstrap-switch-container"
                                                        style={
                                                          Object {
                                                            "marginLeft": -0,
                                                            "width": "auto",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="bootstrap-switch-handle-on bootstrap-switch-primary"
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "width": 0,
                                                            }
                                                          }
                                                        >
                                                          Yes
                                                        </span>
                                                        <span
                                                          className="bootstrap-switch-label"
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseMove={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          style={
                                                            Object {
                                                              "width": 0,
                                                            }
                                                          }
                                                        >
                                                           
                                                        </span>
                                                        <span
                                                          className="bootstrap-switch-handle-off bootstrap-switch-default"
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "width": 0,
                                                            }
                                                          }
                                                        >
                                                          No
                                                        </span>
                                                      </div>
                                                    </div>
                                                  </Switch>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormSwitch>
                                    </Field>
                                    <Field
                                      component={[Function]}
                                      format={[Function]}
                                      inputColumnSize={8}
                                      key="provisioning_verbosity"
                                      label="Verbosity"
                                      labelColumnSize={3}
                                      name="provisioning_verbosity"
                                      options={
                                        Array [
                                          Object {
                                            "label": "0 (Normal)",
                                            "value": 0,
                                          },
                                          Object {
                                            "label": "1 (Verbose)",
                                            "value": 1,
                                          },
                                          Object {
                                            "label": "2 (More Verbose)",
                                            "value": 2,
                                          },
                                          Object {
                                            "label": "3 (Debug)",
                                            "value": 3,
                                          },
                                          Object {
                                            "label": "4 (Connection Debug)",
                                            "value": 4,
                                          },
                                          Object {
                                            "label": "5 (WinRM Debug)",
                                            "value": 5,
                                          },
                                        ]
                                      }
                                      parse={[Function]}
                                      placeholder="<Choose>"
                                    >
                                      <FinalFormSelect
                                        input={
                                          Object {
                                            "name": "provisioning_verbosity",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": 0,
                                          }
                                        }
                                        inputColumnSize={8}
                                        label="Verbosity"
                                        labelColumnSize={3}
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": undefined,
                                            "initial": 0,
                                            "invalid": false,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": true,
                                            "visited": false,
                                          }
                                        }
                                        options={
                                          Array [
                                            Object {
                                              "label": "0 (Normal)",
                                              "value": 0,
                                            },
                                            Object {
                                              "label": "1 (Verbose)",
                                              "value": 1,
                                            },
                                            Object {
                                              "label": "2 (More Verbose)",
                                              "value": 2,
                                            },
                                            Object {
                                              "label": "3 (Debug)",
                                              "value": 3,
                                            },
                                            Object {
                                              "label": "4 (Connection Debug)",
                                              "value": 4,
                                            },
                                            Object {
                                              "label": "5 (WinRM Debug)",
                                              "value": 5,
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="select"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "provisioning_verbosity",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": 0,
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Verbosity"
                                          labelColumnSize={3}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": undefined,
                                              "initial": 0,
                                              "invalid": false,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": true,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "0 (Normal)",
                                                "value": 0,
                                              },
                                              Object {
                                                "label": "1 (Verbose)",
                                                "value": 1,
                                              },
                                              Object {
                                                "label": "2 (More Verbose)",
                                                "value": 2,
                                              },
                                              Object {
                                                "label": "3 (Debug)",
                                                "value": 3,
                                              },
                                              Object {
                                                "label": "4 (Connection Debug)",
                                                "value": 4,
                                              },
                                              Object {
                                                "label": "5 (WinRM Debug)",
                                                "value": 5,
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          searchable={false}
                                          validateOnMount={false}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState={null}
                                          >
                                            <div
                                              className="form-group"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={3}
                                              >
                                                <label
                                                  className="control-label col-xs-3"
                                                >
                                                  Verbosity
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <Select
                                                    arrowRenderer={[Function]}
                                                    autosize={true}
                                                    backspaceRemoves={true}
                                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                                    className=" final-form-select"
                                                    clearAllText="Clear all"
                                                    clearRenderer={[Function]}
                                                    clearValueText="Clear value"
                                                    clearable={false}
                                                    closeOnSelect={true}
                                                    deleteRemoves={true}
                                                    delimiter=","
                                                    disabled={false}
                                                    escapeClearsValue={true}
                                                    filterOptions={[Function]}
                                                    id="provisioning_verbosity"
                                                    ignoreAccents={true}
                                                    ignoreCase={true}
                                                    inputProps={Object {}}
                                                    isLoading={false}
                                                    joinValues={false}
                                                    label="Verbosity"
                                                    labelKey="label"
                                                    matchPos="any"
                                                    matchProp="any"
                                                    menuBuffer={0}
                                                    menuRenderer={[Function]}
                                                    multi={false}
                                                    name="provisioning_verbosity"
                                                    noResultsText="No results found"
                                                    onBlur={[Function]}
                                                    onBlurResetsInput={true}
                                                    onChange={[Function]}
                                                    onCloseResetsInput={true}
                                                    onFocus={[Function]}
                                                    onSelectResetsInput={true}
                                                    openOnClick={true}
                                                    optionClassName="final-form-select-option"
                                                    optionComponent={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "label": "0 (Normal)",
                                                          "value": 0,
                                                        },
                                                        Object {
                                                          "label": "1 (Verbose)",
                                                          "value": 1,
                                                        },
                                                        Object {
                                                          "label": "2 (More Verbose)",
                                                          "value": 2,
                                                        },
                                                        Object {
                                                          "label": "3 (Debug)",
                                                          "value": 3,
                                                        },
                                                        Object {
                                                          "label": "4 (Connection Debug)",
                                                          "value": 4,
                                                        },
                                                        Object {
                                                          "label": "5 (WinRM Debug)",
                                                          "value": 5,
                                                        },
                                                      ]
                                                    }
                                                    pageSize={5}
                                                    placeholder="<Choose>"
                                                    removeSelected={true}
                                                    required={false}
                                                    rtl={false}
                                                    scrollMenuIntoView={true}
                                                    searchable={false}
                                                    simpleValue={false}
                                                    tabSelectsValue={true}
                                                    trimFilter={true}
                                                    value={0}
                                                    valueComponent={[Function]}
                                                    valueKey="value"
                                                  >
                                                    <div
                                                      className="Select  final-form-select has-value Select--single"
                                                    >
                                                      <input
                                                        disabled={false}
                                                        key="hidden.0"
                                                        name="provisioning_verbosity"
                                                        type="hidden"
                                                        value="0"
                                                      />
                                                      <div
                                                        className="Select-control"
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                      >
                                                        <div
                                                          className="Select-multi-value-wrapper"
                                                          id="react-select-8--value"
                                                        >
                                                          <Value
                                                            disabled={false}
                                                            id="react-select-8--value-item"
                                                            instancePrefix="react-select-8-"
                                                            onClick={null}
                                                            placeholder="<Choose>"
                                                            value={
                                                              Object {
                                                                "label": "0 (Normal)",
                                                                "value": 0,
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="Select-value"
                                                            >
                                                              <span
                                                                aria-selected="true"
                                                                className="Select-value-label"
                                                                id="react-select-8--value-item"
                                                                role="option"
                                                              >
                                                                0 (Normal)
                                                              </span>
                                                            </div>
                                                          </Value>
                                                          <div
                                                            aria-activedescendant="react-select-8--value"
                                                            aria-disabled="false"
                                                            aria-expanded={false}
                                                            aria-owns=""
                                                            className="Select-input"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "border": 0,
                                                                "display": "inline-block",
                                                                "width": 1,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          />
                                                        </div>
                                                        <span
                                                          className="Select-arrow-zone"
                                                          onMouseDown={[Function]}
                                                        >
                                                          <span
                                                            className="Select-arrow"
                                                            onMouseDown={[Function]}
                                                          />
                                                        </span>
                                                      </div>
                                                    </div>
                                                  </Select>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormSelect>
                                    </Field>
                                    <Field
                                      format={[Function]}
                                      label="Cloud Type"
                                      name="provisioning_cloud_type"
                                      parse={[Function]}
                                      render={[Function]}
                                    >
                                      <FinalFormSelect
                                        input={
                                          Object {
                                            "name": "provisioning_cloud_type",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": "",
                                          }
                                        }
                                        inputColumnSize={8}
                                        label="Cloud Type"
                                        labelColumnSize={3}
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": undefined,
                                            "initial": "",
                                            "invalid": false,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": true,
                                            "visited": false,
                                          }
                                        }
                                        name="provisioning_cloud_type"
                                        options={
                                          Array [
                                            Object {
                                              "label": "Amazon",
                                              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::AmazonCredential",
                                            },
                                            Object {
                                              "label": "Azure",
                                              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::AzureCredential",
                                            },
                                            Object {
                                              "label": "Google Compute Engine",
                                              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::GoogleCredential",
                                            },
                                            Object {
                                              "label": "OpenStack",
                                              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::OpenstackCredential",
                                            },
                                            Object {
                                              "label": "Red Hat Virtualization",
                                              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::RhvCredential",
                                            },
                                            Object {
                                              "label": "VMware",
                                              "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::VmwareCredential",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="select"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "provisioning_cloud_type",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": "",
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Cloud Type"
                                          labelColumnSize={3}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": undefined,
                                              "initial": "",
                                              "invalid": false,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": true,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          name="provisioning_cloud_type"
                                          options={
                                            Array [
                                              Object {
                                                "label": "Amazon",
                                                "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::AmazonCredential",
                                              },
                                              Object {
                                                "label": "Azure",
                                                "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::AzureCredential",
                                              },
                                              Object {
                                                "label": "Google Compute Engine",
                                                "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::GoogleCredential",
                                              },
                                              Object {
                                                "label": "OpenStack",
                                                "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::OpenstackCredential",
                                              },
                                              Object {
                                                "label": "Red Hat Virtualization",
                                                "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::RhvCredential",
                                              },
                                              Object {
                                                "label": "VMware",
                                                "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::VmwareCredential",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          searchable={false}
                                          validateOnMount={false}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState={null}
                                          >
                                            <div
                                              className="form-group"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={3}
                                              >
                                                <label
                                                  className="control-label col-xs-3"
                                                >
                                                  Cloud Type
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <Select
                                                    arrowRenderer={[Function]}
                                                    autosize={true}
                                                    backspaceRemoves={true}
                                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                                    className=" final-form-select"
                                                    clearAllText="Clear all"
                                                    clearRenderer={[Function]}
                                                    clearValueText="Clear value"
                                                    clearable={false}
                                                    closeOnSelect={true}
                                                    deleteRemoves={true}
                                                    delimiter=","
                                                    disabled={false}
                                                    escapeClearsValue={true}
                                                    filterOptions={[Function]}
                                                    id="provisioning_cloud_type"
                                                    ignoreAccents={true}
                                                    ignoreCase={true}
                                                    inputProps={Object {}}
                                                    isLoading={false}
                                                    joinValues={false}
                                                    label="Cloud Type"
                                                    labelKey="label"
                                                    matchPos="any"
                                                    matchProp="any"
                                                    menuBuffer={0}
                                                    menuRenderer={[Function]}
                                                    multi={false}
                                                    name="provisioning_cloud_type"
                                                    noResultsText="No results found"
                                                    onBlur={[Function]}
                                                    onBlurResetsInput={true}
                                                    onChange={[Function]}
                                                    onCloseResetsInput={true}
                                                    onFocus={[Function]}
                                                    onSelectResetsInput={true}
                                                    openOnClick={true}
                                                    optionClassName="final-form-select-option"
                                                    optionComponent={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "label": "Amazon",
                                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::AmazonCredential",
                                                        },
                                                        Object {
                                                          "label": "Azure",
                                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::AzureCredential",
                                                        },
                                                        Object {
                                                          "label": "Google Compute Engine",
                                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::GoogleCredential",
                                                        },
                                                        Object {
                                                          "label": "OpenStack",
                                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::OpenstackCredential",
                                                        },
                                                        Object {
                                                          "label": "Red Hat Virtualization",
                                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::RhvCredential",
                                                        },
                                                        Object {
                                                          "label": "VMware",
                                                          "value": "ManageIQ::Providers::EmbeddedAnsible::AutomationManager::VmwareCredential",
                                                        },
                                                      ]
                                                    }
                                                    pageSize={5}
                                                    placeholder="<Choose>"
                                                    removeSelected={true}
                                                    required={false}
                                                    rtl={false}
                                                    scrollMenuIntoView={true}
                                                    searchable={false}
                                                    simpleValue={false}
                                                    tabSelectsValue={true}
                                                    trimFilter={true}
                                                    value=""
                                                    valueComponent={[Function]}
                                                    valueKey="value"
                                                  >
                                                    <div
                                                      className="Select  final-form-select Select--single"
                                                    >
                                                      <div
                                                        className="Select-control"
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                      >
                                                        <div
                                                          className="Select-multi-value-wrapper"
                                                          id="react-select-9--value"
                                                        >
                                                          <div
                                                            className="Select-placeholder"
                                                          >
                                                            &lt;Choose&gt;
                                                          </div>
                                                          <div
                                                            aria-activedescendant="react-select-9--value"
                                                            aria-disabled="false"
                                                            aria-expanded={false}
                                                            aria-owns=""
                                                            className="Select-input"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "border": 0,
                                                                "display": "inline-block",
                                                                "width": 1,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          />
                                                        </div>
                                                        <span
                                                          className="Select-arrow-zone"
                                                          onMouseDown={[Function]}
                                                        >
                                                          <span
                                                            className="Select-arrow"
                                                            onMouseDown={[Function]}
                                                          />
                                                        </span>
                                                      </div>
                                                    </div>
                                                  </Select>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormSelect>
                                    </Field>
                                    <Field
                                      component={[Function]}
                                      format={[Function]}
                                      inputColumnSize={8}
                                      label="Cloud Credentials"
                                      labelColumnSize={3}
                                      name="provisioning_cloud_credential_id"
                                      options={Array []}
                                      parse={[Function]}
                                      placeholder="<Choose>"
                                    >
                                      <FinalFormSelect
                                        input={
                                          Object {
                                            "name": "provisioning_cloud_credential_id",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": "",
                                          }
                                        }
                                        inputColumnSize={8}
                                        label="Cloud Credentials"
                                        labelColumnSize={3}
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": undefined,
                                            "initial": "",
                                            "invalid": false,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": true,
                                            "visited": false,
                                          }
                                        }
                                        options={Array []}
                                        placeholder="<Choose>"
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="select"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "provisioning_cloud_credential_id",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": "",
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Cloud Credentials"
                                          labelColumnSize={3}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": undefined,
                                              "initial": "",
                                              "invalid": false,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": true,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          options={Array []}
                                          placeholder="<Choose>"
                                          searchable={false}
                                          validateOnMount={false}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState={null}
                                          >
                                            <div
                                              className="form-group"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={3}
                                              >
                                                <label
                                                  className="control-label col-xs-3"
                                                >
                                                  Cloud Credentials
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <Select
                                                    arrowRenderer={[Function]}
                                                    autosize={true}
                                                    backspaceRemoves={true}
                                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                                    className=" final-form-select"
                                                    clearAllText="Clear all"
                                                    clearRenderer={[Function]}
                                                    clearValueText="Clear value"
                                                    clearable={false}
                                                    closeOnSelect={true}
                                                    deleteRemoves={true}
                                                    delimiter=","
                                                    disabled={false}
                                                    escapeClearsValue={true}
                                                    filterOptions={[Function]}
                                                    id="provisioning_cloud_credential_id"
                                                    ignoreAccents={true}
                                                    ignoreCase={true}
                                                    inputProps={Object {}}
                                                    isLoading={false}
                                                    joinValues={false}
                                                    label="Cloud Credentials"
                                                    labelKey="label"
                                                    matchPos="any"
                                                    matchProp="any"
                                                    menuBuffer={0}
                                                    menuRenderer={[Function]}
                                                    multi={false}
                                                    name="provisioning_cloud_credential_id"
                                                    noResultsText="No results found"
                                                    onBlur={[Function]}
                                                    onBlurResetsInput={true}
                                                    onChange={[Function]}
                                                    onCloseResetsInput={true}
                                                    onFocus={[Function]}
                                                    onSelectResetsInput={true}
                                                    openOnClick={true}
                                                    optionClassName="final-form-select-option"
                                                    optionComponent={[Function]}
                                                    options={Array []}
                                                    pageSize={5}
                                                    placeholder="<Choose>"
                                                    removeSelected={true}
                                                    required={false}
                                                    rtl={false}
                                                    scrollMenuIntoView={true}
                                                    searchable={false}
                                                    simpleValue={false}
                                                    tabSelectsValue={true}
                                                    trimFilter={true}
                                                    value=""
                                                    valueComponent={[Function]}
                                                    valueKey="value"
                                                  >
                                                    <div
                                                      className="Select  final-form-select Select--single"
                                                    >
                                                      <div
                                                        className="Select-control"
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                      >
                                                        <div
                                                          className="Select-multi-value-wrapper"
                                                          id="react-select-10--value"
                                                        >
                                                          <div
                                                            className="Select-placeholder"
                                                          >
                                                            &lt;Choose&gt;
                                                          </div>
                                                          <div
                                                            aria-activedescendant="react-select-10--value"
                                                            aria-disabled="false"
                                                            aria-expanded={false}
                                                            aria-owns=""
                                                            className="Select-input"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "border": 0,
                                                                "display": "inline-block",
                                                                "width": 1,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          />
                                                        </div>
                                                        <span
                                                          className="Select-arrow-zone"
                                                          onMouseDown={[Function]}
                                                        >
                                                          <span
                                                            className="Select-arrow"
                                                            onMouseDown={[Function]}
                                                          />
                                                        </span>
                                                      </div>
                                                    </div>
                                                  </Select>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormSelect>
                                    </Field>
                                  </div>
                                  <div
                                    className="col-md-12 col-lg-6"
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <label
                                        className="control-label col-xs-2"
                                      >
                                        Variables & Default Values
                                      </label>
                                      <div
                                        className="col-xs-8"
                                      >
                                        <div>
                                          <Button
                                            active={false}
                                            block={false}
                                            bsClass="btn"
                                            bsStyle="primary"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <button
                                              className="btn btn-primary"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Add
                                            </button>
                                          </Button>
                                        </div>
                                      </div>
                                    </div>
                                    <Field
                                      component={[Function]}
                                      format={[Function]}
                                      label="Dialog"
                                      name="dialogOption"
                                      options={
                                        Array [
                                          Object {
                                            "label": "Use Existing",
                                            "value": "existing",
                                          },
                                          Object {
                                            "label": "Create New",
                                            "value": "new",
                                          },
                                        ]
                                      }
                                      parse={[Function]}
                                    >
                                      <FinalFormSelect
                                        input={
                                          Object {
                                            "name": "dialogOption",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "value": "existing",
                                          }
                                        }
                                        label="Dialog"
                                        meta={
                                          Object {
                                            "active": false,
                                            "data": Object {},
                                            "dirty": false,
                                            "dirtySinceLastSubmit": false,
                                            "error": undefined,
                                            "initial": "existing",
                                            "invalid": false,
                                            "pristine": true,
                                            "submitError": undefined,
                                            "submitFailed": false,
                                            "submitSucceeded": false,
                                            "touched": false,
                                            "valid": true,
                                            "visited": false,
                                          }
                                        }
                                        options={
                                          Array [
                                            Object {
                                              "label": "Use Existing",
                                              "value": "existing",
                                            },
                                            Object {
                                              "label": "Create New",
                                              "value": "new",
                                            },
                                          ]
                                        }
                                      >
                                        <FinalFormComponent
                                          clearable={false}
                                          componentType="select"
                                          disabled={false}
                                          input={
                                            Object {
                                              "name": "dialogOption",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "value": "existing",
                                            }
                                          }
                                          inputColumnSize={8}
                                          label="Dialog"
                                          labelColumnSize={2}
                                          labelKey="label"
                                          meta={
                                            Object {
                                              "active": false,
                                              "data": Object {},
                                              "dirty": false,
                                              "dirtySinceLastSubmit": false,
                                              "error": undefined,
                                              "initial": "existing",
                                              "invalid": false,
                                              "pristine": true,
                                              "submitError": undefined,
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "touched": false,
                                              "valid": true,
                                              "visited": false,
                                            }
                                          }
                                          multi={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "Use Existing",
                                                "value": "existing",
                                              },
                                              Object {
                                                "label": "Create New",
                                                "value": "new",
                                              },
                                            ]
                                          }
                                          placeholder=""
                                          searchable={false}
                                          validateOnMount={false}
                                          valueKey="value"
                                        >
                                          <FormGroup
                                            bsClass="form-group"
                                            validationState={null}
                                          >
                                            <div
                                              className="form-group"
                                            >
                                              <Col
                                                bsClass="col"
                                                className="control-label"
                                                componentClass="label"
                                                xs={2}
                                              >
                                                <label
                                                  className="control-label col-xs-2"
                                                >
                                                  Dialog
                                                </label>
                                              </Col>
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={8}
                                              >
                                                <div
                                                  className="col-xs-8"
                                                >
                                                  <Select
                                                    arrowRenderer={[Function]}
                                                    autosize={true}
                                                    backspaceRemoves={true}
                                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                                    className=" final-form-select"
                                                    clearAllText="Clear all"
                                                    clearRenderer={[Function]}
                                                    clearValueText="Clear value"
                                                    clearable={false}
                                                    closeOnSelect={true}
                                                    deleteRemoves={true}
                                                    delimiter=","
                                                    disabled={false}
                                                    escapeClearsValue={true}
                                                    filterOptions={[Function]}
                                                    id="dialogOption"
                                                    ignoreAccents={true}
                                                    ignoreCase={true}
                                                    inputProps={Object {}}
                                                    isLoading={false}
                                                    joinValues={false}
                                                    label="Dialog"
                                                    labelKey="label"
                                                    matchPos="any"
                                                    matchProp="any"
                                                    menuBuffer={0}
                                                    menuRenderer={[Function]}
                                                    multi={false}
                                                    name="dialogOption"
                                                    noResultsText="No results found"
                                                    onBlur={[Function]}
                                                    onBlurResetsInput={true}
                                                    onChange={[Function]}
                                                    onCloseResetsInput={true}
                                                    onFocus={[Function]}
                                                    onSelectResetsInput={true}
                                                    openOnClick={true}
                                                    optionClassName="final-form-select-option"
                                                    optionComponent={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "label": "Use Existing",
                                                          "value": "existing",
                                                        },
                                                        Object {
                                                          "label": "Create New",
                                                          "value": "new",
                                                        },
                                                      ]
                                                    }
                                                    pageSize={5}
                                                    placeholder=""
                                                    removeSelected={true}
                                                    required={false}
                                                    rtl={false}
                                                    scrollMenuIntoView={true}
                                                    searchable={false}
                                                    simpleValue={false}
                                                    tabSelectsValue={true}
                                                    trimFilter={true}
                                                    value="existing"
                                                    valueComponent={[Function]}
                                                    valueKey="value"
                                                  >
                                                    <div
                                                      className="Select  final-form-select has-value Select--single"
                                                    >
                                                      <input
                                                        disabled={false}
                                                        key="hidden.0"
                                                        name="dialogOption"
                                                        type="hidden"
                                                        value="existing"
                                                      />
                                                      <div
                                                        className="Select-control"
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                      >
                                                        <div
                                                          className="Select-multi-value-wrapper"
                                                          id="react-select-11--value"
                                                        >
                                                          <Value
                                                            disabled={false}
                                                            id="react-select-11--value-item"
                                                            instancePrefix="react-select-11-"
                                                            onClick={null}
                                                            placeholder=""
                                                            value={
                                                              Object {
                                                                "label": "Use Existing",
                                                                "value": "existing",
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="Select-value"
                                                            >
                                                              <span
                                                                aria-selected="true"
                                                                className="Select-value-label"
                                                                id="react-select-11--value-item"
                                                                role="option"
                                                              >
                                                                Use Existing
                                                              </span>
                                                            </div>
                                                          </Value>
                                                          <div
                                                            aria-activedescendant="react-select-11--value"
                                                            aria-disabled="false"
                                                            aria-expanded={false}
                                                            aria-owns=""
                                                            className="Select-input"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "border": 0,
                                                                "display": "inline-block",
                                                                "width": 1,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          />
                                                        </div>
                                                        <span
                                                          className="Select-arrow-zone"
                                                          onMouseDown={[Function]}
                                                        >
                                                          <span
                                                            className="Select-arrow"
                                                            onMouseDown={[Function]}
                                                          />
                                                        </span>
                                                      </div>
                                                    </div>
                                                  </Select>
                                                </div>
                                              </Col>
                                            </div>
                                          </FormGroup>
                                        </FinalFormComponent>
                                      </FinalFormSelect>
                                    </Field>
                                    <Condition
                                      is="existing"
                                      when="dialogOption"
                                    >
                                      <Field
                                        format={[Function]}
                                        name="dialogOption"
                                        parse={[Function]}
                                        subscription={
                                          Object {
                                            "value": true,
                                          }
                                        }
                                      >
                                        <Field
                                          component={[Function]}
                                          format={[Function]}
                                          label="Select Dialog"
                                          name="dialog_id"
                                          options={
                                            Array [
                                              Object {
                                                "label": "101-vm-simple-rhel Dialog",
                                                "value": "10000000000003",
                                              },
                                            ]
                                          }
                                          parse={[Function]}
                                          placeholder="<Choose>"
                                          validate={[Function]}
                                          validateOnMount={true}
                                        >
                                          <FinalFormSelect
                                            input={
                                              Object {
                                                "name": "dialog_id",
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onFocus": [Function],
                                                "value": "",
                                              }
                                            }
                                            label="Select Dialog"
                                            meta={
                                              Object {
                                                "active": false,
                                                "data": Object {},
                                                "dirty": false,
                                                "dirtySinceLastSubmit": false,
                                                "error": "Required",
                                                "initial": "",
                                                "invalid": true,
                                                "pristine": true,
                                                "submitError": undefined,
                                                "submitFailed": false,
                                                "submitSucceeded": false,
                                                "touched": false,
                                                "valid": false,
                                                "visited": false,
                                              }
                                            }
                                            options={
                                              Array [
                                                Object {
                                                  "label": "101-vm-simple-rhel Dialog",
                                                  "value": "10000000000003",
                                                },
                                              ]
                                            }
                                            placeholder="<Choose>"
                                            validateOnMount={true}
                                          >
                                            <FinalFormComponent
                                              clearable={false}
                                              componentType="select"
                                              disabled={false}
                                              input={
                                                Object {
                                                  "name": "dialog_id",
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onFocus": [Function],
                                                  "value": "",
                                                }
                                              }
                                              inputColumnSize={8}
                                              label="Select Dialog"
                                              labelColumnSize={2}
                                              labelKey="label"
                                              meta={
                                                Object {
                                                  "active": false,
                                                  "data": Object {},
                                                  "dirty": false,
                                                  "dirtySinceLastSubmit": false,
                                                  "error": "Required",
                                                  "initial": "",
                                                  "invalid": true,
                                                  "pristine": true,
                                                  "submitError": undefined,
                                                  "submitFailed": false,
                                                  "submitSucceeded": false,
                                                  "touched": false,
                                                  "valid": false,
                                                  "visited": false,
                                                }
                                              }
                                              multi={false}
                                              options={
                                                Array [
                                                  Object {
                                                    "label": "101-vm-simple-rhel Dialog",
                                                    "value": "10000000000003",
                                                  },
                                                ]
                                              }
                                              placeholder="<Choose>"
                                              searchable={false}
                                              validateOnMount={true}
                                              valueKey="value"
                                            >
                                              <FormGroup
                                                bsClass="form-group"
                                                validationState="error"
                                              >
                                                <div
                                                  className="form-group has-error"
                                                >
                                                  <Col
                                                    bsClass="col"
                                                    className="control-label"
                                                    componentClass="label"
                                                    xs={2}
                                                  >
                                                    <label
                                                      className="control-label col-xs-2"
                                                    >
                                                      Select Dialog
                                                    </label>
                                                  </Col>
                                                  <Col
                                                    bsClass="col"
                                                    componentClass="div"
                                                    xs={8}
                                                  >
                                                    <div
                                                      className="col-xs-8"
                                                    >
                                                      <Select
                                                        arrowRenderer={[Function]}
                                                        autosize={true}
                                                        backspaceRemoves={true}
                                                        backspaceToRemoveMessage="Press backspace to remove {label}"
                                                        className=" final-form-select"
                                                        clearAllText="Clear all"
                                                        clearRenderer={[Function]}
                                                        clearValueText="Clear value"
                                                        clearable={false}
                                                        closeOnSelect={true}
                                                        deleteRemoves={true}
                                                        delimiter=","
                                                        disabled={false}
                                                        escapeClearsValue={true}
                                                        filterOptions={[Function]}
                                                        id="dialog_id"
                                                        ignoreAccents={true}
                                                        ignoreCase={true}
                                                        inputProps={Object {}}
                                                        isLoading={false}
                                                        joinValues={false}
                                                        label="Select Dialog"
                                                        labelKey="label"
                                                        matchPos="any"
                                                        matchProp="any"
                                                        menuBuffer={0}
                                                        menuRenderer={[Function]}
                                                        multi={false}
                                                        name="dialog_id"
                                                        noResultsText="No results found"
                                                        onBlur={[Function]}
                                                        onBlurResetsInput={true}
                                                        onChange={[Function]}
                                                        onCloseResetsInput={true}
                                                        onFocus={[Function]}
                                                        onSelectResetsInput={true}
                                                        openOnClick={true}
                                                        optionClassName="final-form-select-option"
                                                        optionComponent={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "101-vm-simple-rhel Dialog",
                                                              "value": "10000000000003",
                                                            },
                                                          ]
                                                        }
                                                        pageSize={5}
                                                        placeholder="<Choose>"
                                                        removeSelected={true}
                                                        required={false}
                                                        rtl={false}
                                                        scrollMenuIntoView={true}
                                                        searchable={false}
                                                        simpleValue={false}
                                                        tabSelectsValue={true}
                                                        trimFilter={true}
                                                        value=""
                                                        valueComponent={[Function]}
                                                        valueKey="value"
                                                      >
                                                        <div
                                                          className="Select  final-form-select Select--single"
                                                        >
                                                          <div
                                                            className="Select-control"
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                          >
                                                            <div
                                                              className="Select-multi-value-wrapper"
                                                              id="react-select-12--value"
                                                            >
                                                              <div
                                                                className="Select-placeholder"
                                                              >
                                                                &lt;Choose&gt;
                                                              </div>
                                                              <div
                                                                aria-activedescendant="react-select-12--value"
                                                                aria-disabled="false"
                                                                aria-expanded={false}
                                                                aria-owns=""
                                                                className="Select-input"
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                role="combobox"
                                                                style={
                                                                  Object {
                                                                    "border": 0,
                                                                    "display": "inline-block",
                                                                    "width": 1,
                                                                  }
                                                                }
                                                                tabIndex={0}
                                                              />
                                                            </div>
                                                            <span
                                                              className="Select-arrow-zone"
                                                              onMouseDown={[Function]}
                                                            >
                                                              <span
                                                                className="Select-arrow"
                                                                onMouseDown={[Function]}
                                                              />
                                                            </span>
                                                          </div>
                                                        </div>
                                                      </Select>
                                                      <HelpBlock
                                                        bsClass="help-block"
                                                      >
                                                        <span
                                                          className="help-block"
                                                        >
                                                          Required
                                                        </span>
                                                      </HelpBlock>
                                                    </div>
                                                  </Col>
                                                </div>
                                              </FormGroup>
                                            </FinalFormComponent>
                                          </FinalFormSelect>
                                        </Field>
                                      </Field>
                                    </Condition>
                                    <Condition
                                      is="new"
                                      when="dialogOption"
                                    >
                                      <Field
                                        format={[Function]}
                                        name="dialogOption"
                                        parse={[Function]}
                                        subscription={
                                          Object {
                                            "value": true,
                                          }
                                        }
                                      />
                                    </Condition>
                                  </div>
                                </div>
                              </AnsiblePlaybookFields>
                            </Connect(AnsiblePlaybookFields)>
                          </div>
                        </Transition>
                      </Fade>
                    </TabPane>
                    <TabPane
                      bsClass="tab-pane"
                      eventKey={2}
                      mountOnEnter={true}
                    >
                      <Fade
                        appear={false}
                        in={false}
                        mountOnEnter={true}
                        onEnter={[Function]}
                        onExited={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={true}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        />
                      </Fade>
                    </TabPane>
                  </div>
                </TabContent>
              </div>
            </TabContainer>
          </Uncontrolled(TabContainer)>
          <FormButtons
            addClicked={[Function]}
            cancelClicked={[Function]}
            customLabel=""
            newRecord={true}
            pristine={true}
            resetClicked={[Function]}
            saveClicked={[Function]}
            saveable={false}
          >
            <div
              className="clearfix"
            />
            <div
              className="pull-right button-group edit_buttons"
            >
              <MiqButton
                disabledTitle=""
                enabled={false}
                enabledTitle=""
                name="Add"
                onClick={[Function]}
                primary={true}
                title="Add"
                xs={false}
              >
                <button
                  alt="Add"
                  className="btn btn-primary disabled"
                  onClick={[Function]}
                  title="Add"
                >
                  Add
                </button>
              </MiqButton>
              <MiqButton
                disabledTitle=""
                enabled={true}
                enabledTitle=""
                name="Cancel"
                onClick={[Function]}
                primary={false}
                title="Cancel"
                xs={false}
              >
                <button
                  alt="Cancel"
                  className="btn btn-default"
                  onClick={[Function]}
                  title="Cancel"
                >
                  Cancel
                </button>
              </MiqButton>
            </div>
          </FormButtons>
        </form>
      </Form>
    </ReactFinalForm>
  </AnsibleCatalogItemForm>
</Connect(AnsibleCatalogItemForm)>
`;
